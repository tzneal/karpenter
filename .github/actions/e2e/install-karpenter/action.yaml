name: InstallKarpenter
description: 'Installs Go Downloads and installs Karpenter Dependencies'
inputs:
  account_id:
    description: "Account ID to access AWS"
    required: true
  role:
    description: "Role to access AWS"
    required: true
  region:
    description: "Region to access AWS"
    required: true
  ecr_account_id:
    description: "Account ID for the ECR repo"
    required: true
  ecr_region:
    description: "Region for the ECR repo"
    required: true
  cluster_name:
    description: 'Name of the cluster to be launched by eksctl'
    required: true
  k8s_version:
    description: 'Version of Kubernetes to use for the launched cluster'
    default: "1.29"
  git_ref:
    description: "The git commit, tag, or branch to check out. Requires a corresponding Karpenter snapshot release"
runs:
  using: "composite"
  steps:
  - uses: actions/checkout@9bb56186c3b09b4f86b1c65136769dd318469633 # v4.1.2
    with:
      ref: ${{ inputs.git_ref }}
  - uses: ./.github/actions/e2e/install-helm
    with:
      version: v3.12.3 # Pinned to this version since v3.13.0 has issues with anonymous pulls: https://github.com/helm/helm/issues/12423
  # Label namespace to enforce security stranded and scrape prometheus metrics
  # https://kubernetes.io/docs/concepts/security/pod-security-standards/
  - name: add labels to kube-system namespace
    shell: bash
    run: |
      kubectl label ns kube-system scrape=enabled --overwrite=true
      kubectl label ns kube-system pod-security.kubernetes.io/warn=restricted --overwrite=true
  - name: login to ecr via docker
    uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v3.1.0
    with:
      registry: ${{ inputs.ecr_account_id }}.dkr.ecr.${{ inputs.ecr_region }}.amazonaws.com
      logout: true
  - name: install-karpenter
    shell: bash
    env:
      ECR_ACCOUNT_ID: ${{ inputs.ecr_account_id }}
      ECR_REGION: ${{ inputs.ecr_region }}
      ACCOUNT_ID: ${{ inputs.account_id }}
      CLUSTER_NAME: ${{ inputs.cluster_name }}
      K8S_VERSION: ${{ inputs.k8s_version }}
    run: |
      aws eks update-kubeconfig --name "$CLUSTER_NAME"

      # Parse minor version to determine whether to enable the webhooks
      RELEASE_VERSION_MINOR="${K8S_VERSION#*.}"
      WEBHOOK_ENABLED=false
      if (( RELEASE_VRESION_MINOR < 25 )); then
        WEBHOOK_ENABLED=true
      fi

      # Remove service account annotation when dropping support for 1.23
      helm upgrade --install karpenter "oci://$ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/karpenter/snapshot/karpenter" \
        -n kube-system \
        --version "v0-$(git rev-parse HEAD)" \
        --set logLevel=debug \
        --set webhook.enabled=${WEBHOOK_ENABLED} \
        --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"="arn:aws:iam::$ACCOUNT_ID:role/karpenter-irsa-$CLUSTER_NAME" \
        --set settings.clusterName="$CLUSTER_NAME" \
        --set settings.interruptionQueue="$CLUSTER_NAME" \
        --set settings.featureGates.spotToSpotConsolidation=true \
        --set controller.resources.requests.cpu=3 \
        --set controller.resources.requests.memory=3Gi \
        --set controller.resources.limits.cpu=3 \
        --set controller.resources.limits.memory=3Gi \
        --set serviceMonitor.enabled=true \
        --set serviceMonitor.additionalLabels.scrape=enabled \
        --set "serviceMonitor.endpointConfig.relabelings[0].targetLabel=clusterName" \
        --set "serviceMonitor.endpointConfig.relabelings[0].replacement=$CLUSTER_NAME" \
        --set "serviceMonitor.endpointConfig.relabelings[1].targetLabel=gitRef" \
        --set "serviceMonitor.endpointConfig.relabelings[1].replacement=$(git rev-parse HEAD)" \
        --set "serviceMonitor.endpointConfig.relabelings[2].targetLabel=mostRecentTag" \
        --set "serviceMonitor.endpointConfig.relabelings[2].replacement=$(git describe --abbrev=0 --tags)" \
        --set "serviceMonitor.endpointConfig.relabelings[3].targetLabel=commitsAfterTag" \
        --set "serviceMonitor.endpointConfig.relabelings[3].replacement=\"$(git describe --tags | cut -d '-' -f 2)\"" \
        --wait
  - name: diff-karpenter
    shell: bash
    env:
      ECR_ACCOUNT_ID: ${{ inputs.ecr_account_id }}
      ECR_REGION: ${{ inputs.ecr_region }}
    run: |
      helm diff upgrade --namespace kube-system \
        karpenter oci://$ECR_ACCOUNT_ID.dkr.ecr.$ECR_REGION.amazonaws.com/karpenter/snapshot/karpenter \
        --version v0-$(git rev-parse HEAD) \
        --reuse-values --three-way-merge --detailed-exitcode
